# These deployment files are containing anti-patterns!
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: sample-app
  name: sample-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-app
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sample-app
    spec:
      containers:
      - image: ghcr.io/nmeisenzahl/hijack-kubernetes/log4shell-app:latest
        name: sample-app
        ports:
        - containerPort: 8080
        resources: {}
        securityContext:
          runAsUser: 0
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: sample-app
  name: sample-app
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: sample-app
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-app
  namespace: default
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sample-app
            port:
              number: 8080
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: editor
  namespace: default
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: edit
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Namespace
metadata:
  name: another-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: another-app
  name: another-app
  namespace: another-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: another-app
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: another-app
    spec:
      containers:
      - image: nginx:1.21.3
        name: another-app
        env:
          - name: REDIS_KEY
            valueFrom:
              secretKeyRef:
                name: another-secret
                key: redisKey
          - name: REDIS_HOST
            valueFrom:
              secretKeyRef:
                name: another-secret
                key: redisHost
        ports:
        - containerPort: 80
        resources: {}
status: {}
